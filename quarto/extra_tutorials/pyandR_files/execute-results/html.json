{
  "hash": "f50d6215b89b9df0de2b6c8904ffa9e7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Extra: Python and R\"\nauthor: \"Python Group\"\nformat: \n    html:\n        output-file: \"pyAndR.html\"\n        toc: true\n        code-copy: true\n        code-line-numbers: true\n        link-external-icon: false\n        link-external-newwindow: true\n---\n\n\n\nLet's have a look at python and R talking to each other. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(reticulate)\n\nuse_condaenv(\"python-intro-env\", required = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport seaborn.objects as so\nimport matplotlib.pyplot as plt\n\npenguins = sns.load_dataset(\"penguins\")\n```\n:::\n\n\n\n### Use the 'py' object to pass things from python to R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npy$penguins %>% ggplot(aes(color = species, x = body_mass_g, y = bill_length_mm)) + facet_wrap(~island) + geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](pyandR_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\np = so.Plot(penguins, \"bill_length_mm\", \"bill_depth_mm\").add(so.Dots(), color =\"species\").facet(\"island\")\np.show()\n```\n\n::: {.cell-output-display}\n![](pyandR_files/figure-html/unnamed-chunk-4-1.png){width=614}\n:::\n:::\n\n\n\n### Use the 'r' object to pass things from R to python\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nprint(r.iris.head())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Sepal.Length  Sepal.Width  Petal.Length  Petal.Width Species\n0           5.1          3.5           1.4          0.2  setosa\n1           4.9          3.0           1.4          0.2  setosa\n2           4.7          3.2           1.3          0.2  setosa\n3           4.6          3.1           1.5          0.2  setosa\n4           5.0          3.6           1.4          0.2  setosa\n```\n\n\n:::\n:::",
    "supporting": [
      "pyandR_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}